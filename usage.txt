windows:
进入项目目录
python -m venv KGRAG_env --clear  # 重新创建虚拟环境
.\KGRAG_env\Scripts\Activate.ps1 # 激活虚拟环境
pip install -r requirements.txt # 安装依赖
$env:SILICONCLOUD_API_KEY="your_api_key" # 设置siliconcloud api key
$env:NEO4J_USERNAME="your_neo4j_user" # 设置neo4j user
$env:NEO4J_PASSWORD="your_neo4j_password" # 设置neo4j password
$env:NEO4J_DATABASE="kgrag" # 设置neo4j password
python pinterest_kgrag/backend/app.py # 启动后端
cd pinterest_kgrag/frontend # 进入前端目录
删除这两个文件node_modules package-lock.json # 清理前端依赖
npm install # 安装前端依赖
npm run serve / npm start # 启动前端

配置好neo4j数据库json文件
下载ollama
ollama serve # 启动服务（cmd中启动服务
ollama pull llama3.2 # 下载模型

打开neo4j数据库

linux:
进入项目目录
source KGRAG_env/bin/activate # 激活虚拟环境
pip install -r requirements.txt # 安装依赖
python pinterest_kgrag/backend/app.py # 启动后端
cd pinterest_kgrag/frontend # 进入前端目录
rm -rf node_modules package-lock.json # 清理前端依赖
npm install # 安装前端依赖
npm run serve / npm start # 启动前端

pip install ollama # 安装ollama
ollama serve # 启动服务
ollama pull llama3.2 # 下载模型
